

INCLUDE(TribitsAddExecutable)
INCLUDE(TribitsAddTest)




MACRO(TRIBITS_FWD_PARSE_ARG  VAR_TO_SET_OUT  ARGNAME)
  IF (PARSE_${ARGNAME})
    SET(${VAR_TO_SET_OUT} ${${VAR_TO_SET_OUT}} ${ARGNAME} ${PARSE_${ARGNAME}})
  ENDIF()
ENDMACRO()


MACRO(TRIBITS_FWD_PARSE_OPT  VAR_TO_SET_OUT  OPTNAME)
  IF (PARSE_${OPTNAME})
    SET(${VAR_TO_SET_OUT} ${${VAR_TO_SET_OUT}} ${OPTNAME})
  ENDIF()
ENDMACRO()


MACRO(TRIBITS_ADD_EXECUTABLE_WRAPPER)
  IF (TRIBITS_ADD_EXECUTABLE_AND_TEST_TEST_MODE)
    SET(TRIBITS_ADD_EXECUTABLE_CAPTURE_ARGS ${ARGN} CACHE INTERNAL "")
  ELSE()
    TRIBITS_ADD_EXECUTABLE(${ARGN})
  ENDIF()
ENDMACRO()


MACRO(TRIBITS_ADD_TEST_WRAPPER)
  IF (TRIBITS_ADD_EXECUTABLE_AND_TEST_TEST_MODE)
    SET(TRIBITS_ADD_TEST_CAPTURE_ARGS ${ARGN} CACHE INTERNAL "")
  ELSE()
    TRIBITS_ADD_TEST(${ARGN})
  ENDIF()
ENDMACRO()

FUNCTION(TRIBITS_ADD_EXECUTABLE_AND_TEST EXE_NAME)


  PARSE_ARGUMENTS(
     PARSE
     "SOURCES;DEPLIBS;TESTONLYLIBS;IMPORTEDLIBS;NAME;NAME_POSTFIX;NUM_MPI_PROCS;DIRECTORY;KEYWORDS;COMM;ARGS;NAME;PASS_REGULAR_EXPRESSION;FAIL_REGULAR_EXPRESSION;ENVIRONMENT;CATEGORIES;HOST;XHOST;XHOST_TEST;HOSTTYPE;XHOSTTYPE;XHOSTTYPE_TEST;LINKER_LANGUAGE;DEFINES;ADDED_EXE_TARGET_NAME_OUT;ADDED_TESTS_NAMES_OUT"
     "STANDARD_PASS_OUTPUT;WILL_FAIL;TIMEOUT;ADD_DIR_TO_NAME;INSTALLABLE;NOEXEPREFIX;NOEXESUFFIX"
     ${ARGN}
     )

  IF(${PROJECT_NAME}_VERBOSE_CONFIGURE)
    MESSAGE("")
    MESSAGE("TRIBITS_ADD_EXECUTABLE_AND_TEST: ${EXE_NAME} ${ARGN}")
  ENDIF()

  IF(PARSE_ADDED_EXE_TARGET_NAME_OUT)
    SET(${PARSE_ADDED_EXE_TARGET_NAME_OUT} "" PARENT_SCOPE)
  ENDIF()
  IF(PARSE_ADDED_TESTS_NAMES_OUT)
    SET(${PARSE_ADDED_TESTS_NAMES_OUT} "" PARENT_SCOPE)
  ENDIF()


  SET(COMMON_CALL_ARGS "")
  TRIBITS_FWD_PARSE_ARG(COMMON_CALL_ARGS COMM)
  TRIBITS_FWD_PARSE_ARG(COMMON_CALL_ARGS CATEGORIES)
  TRIBITS_FWD_PARSE_ARG(COMMON_CALL_ARGS HOST)
  TRIBITS_FWD_PARSE_ARG(COMMON_CALL_ARGS XHOST)
  TRIBITS_FWD_PARSE_ARG(COMMON_CALL_ARGS HOSTTYPE)
  TRIBITS_FWD_PARSE_ARG(COMMON_CALL_ARGS XHOSTTYPE)
  TRIBITS_FWD_PARSE_OPT(COMMON_CALL_ARGS NOEXEPREFIX)
  TRIBITS_FWD_PARSE_OPT(COMMON_CALL_ARGS NOEXESUFFIX)


  SET(CALL_ARGS "")
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS SOURCES)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS DEPLIBS)  # Deprecated
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS TESTONLYLIBS)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS IMPORTEDLIBS)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS DIRECTORY)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS ADD_DIR_TO_NAME)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS LINKER_LANGUAGE)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS DEFINES)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS INSTALLABLE)
  IF (PARSE_ADDED_EXE_TARGET_NAME_OUT)
    LIST(APPEND  CALL_ARGS  ADDED_EXE_TARGET_NAME_OUT  ADDED_EXE_TARGET_NAME)
  ENDIF()

  TRIBITS_ADD_EXECUTABLE_WRAPPER(${EXE_NAME} ${COMMON_CALL_ARGS} ${CALL_ARGS})

  IF(PARSE_ADDED_EXE_TARGET_NAME_OUT)
    SET( ${PARSE_ADDED_EXE_TARGET_NAME_OUT}  "${ADDED_EXE_TARGET_NAME}"
      PARENT_SCOPE )
  ENDIF()


  SET(CALL_ARGS "")
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS NAME)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS NAME_POSTFIX)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS DIRECTORY)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS KEYWORDS)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS NUM_MPI_PROCS)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS ARGS)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS PASS_REGULAR_EXPRESSION)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS FAIL_REGULAR_EXPRESSION)
  TRIBITS_FWD_PARSE_ARG(CALL_ARGS ENVIRONMENT)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS STANDARD_PASS_OUTPUT)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS WILL_FAIL)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS TIMEOUT)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS ADD_DIR_TO_NAME)
  TRIBITS_FWD_PARSE_OPT(CALL_ARGS ADDED_TESTS_NAMES_OUT)
  IF (PARSE_XHOST_TEST)
    SET(CALL_ARGS ${CALL_ARGS} XHOST ${PARSE_XHOST_TEST})
  ENDIF()
  IF (PARSE_XHOSTTYPE_TEST)
    SET(CALL_ARGS ${CALL_ARGS} XHOSTTYPE ${PARSE_XHOSTTYPE_TEST})
  ENDIF()
  IF (PARSE_ADDED_TESTS_NAMES_OUT)
    LIST(APPEND  CALL_ARGS  ADDED_TESTS_NAMES_OUT  ADDED_TESTS_NAMES)
  ENDIF()

  TRIBITS_ADD_TEST_WRAPPER(${EXE_NAME} ${COMMON_CALL_ARGS} ${CALL_ARGS})

  IF(PARSE_ADDED_TESTS_NAMES_OUT)
    SET(${PARSE_ADDED_TESTS_NAMES_OUT} "${ADDED_TESTS_NAMES}" PARENT_SCOPE)
  ENDIF()

ENDFUNCTION()
