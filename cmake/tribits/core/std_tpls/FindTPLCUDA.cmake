

SET(_CUDA_FAILURE OFF)

IF(NOT _CUDA_FAILURE)
  FIND_PACKAGE(CUDA 3.2 REQUIRED)
  IF (NOT CUDA_FOUND)
    SET(_CUDA_FAILURE ON)
  ENDIF()
ENDIF()


IF(NOT _CUDA_FAILURE)
  macro(PACKAGE_ADD_CUDA_LIBRARY cuda_target)
    TRIBITS_ADD_LIBRARY(${cuda_target} ${ARGN} CUDALIBRARY)
  endmacro()
  GLOBAL_SET(TPL_CUDA_LIBRARY_DIRS)
  GLOBAL_SET(TPL_CUDA_INCLUDE_DIRS ${CUDA_TOOLKIT_INCLUDE})
  GLOBAL_SET(TPL_CUDA_LIBRARIES ${CUDA_CUDART_LIBRARY} ${CUDA_cublas_LIBRARY}
     ${CUDA_cufft_LIBRARY})
ELSE()
  SET(TPL_ENABLE_CUDA OFF PARENT_SCOPE)
  MESSAGE(FATAL_ERROR "\nDid not find acceptable version of CUDA compiler")
ENDIF()
