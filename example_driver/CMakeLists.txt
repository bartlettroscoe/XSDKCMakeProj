CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)

MESSAGE("CMAKE_MODULE_PATH = ${CMAKE_MODULE_PATH}")
INCLUDE("CMakeForceCompiler")

PROJECT(MY_PROJ NONE)

# A) Determine if to set compiler defaults from env var.

SET(GET_COMPILER_DEFAULTS_FROM_ENV  TRUE)
IF (USE_XSDK_DEFAULTS  AND  NOT  XSDK_USE_COMPILER_ENV_VARS)
  SET(GET_COMPILER_DEFAULTS_FROM_ENV  FALSE)
ENDIF()

# B) Set defaults from env vars is asked and otherwise ignore the env vars
# (which goes against default CMake behavior),

IF (GET_COMPILER_DEFAULTS_FROM_ENV)
  IF (NOT "$ENV{CXX}" STREQUAL "" AND "${CMAKE_CXX_COMPILER}" STREQUAL "")
    MESSAGE("Setting CMAKE_CXX_COMPILER from env var CXX!")
    SET(CMAKE_CXX_COMPILER "$ENV{CXX}" CACHE FILEPATH "Set from env var CXX")  
  ENDIF()
ELSE()
  IF (NOT "$ENV{CXX}" STREQUAL "" AND "${CMAKE_CXX_COMPILER}" STREQUAL "")
    MESSAGE("NOT setting CMAKE_CXX_COMPILER from env var CXX!")
    SET(CMAKE_CXX_COMPILER "CMAKE_CXX_COMPILER_HAS_NOT_BEEN_SET" CACHE FILEPATH "Ignoring default set by env var CXX")  
  ENDIF()
ENDIF()

MESSAGE("\n*** Before ENABLE_LANGUAGE(CXX):")
MESSAGE("CMAKE_CXX_COMPILER = ${CMAKE_CXX_COMPILER}") 
MESSAGE("CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}") 
MESSAGE("CMAKE_CXX_FLAGS_DEBUG = ${CMAKE_CXX_FLAGS_DEBUG}") 
MESSAGE("CMAKE_CXX_FLAGS_RELEASE = ${CMAKE_CXX_FLAGS_RELEASE}") 
MESSAGE("BUILD_SHARED_LIBS = ${BUILD_SHARED_LIBS}")

IF (CMAKE_CXX_COMPILER STREQUAL "CMAKE_CXX_COMPILER_HAS_NOT_BEEN_SET")
  MESSAGE(FATAL_ERROR "CMAKE_CXX_COMPILER is not set by the user, aborting!")
ELSEIF(CMAKE_CXX_COMPILER STREQUAL "")
  MESSAGE(FATAL_ERROR "CMAKE_CXX_COMPILER was set by user to empty '', aborting!")
ENDIF()

ENABLE_LANGUAGE(CXX)

MESSAGE("\n*** After ENABLE_LANGUAGE(CXX):")
MESSAGE("CMAKE_CXX_COMPILER = ${CMAKE_CXX_COMPILER}") 
MESSAGE("CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}") 
MESSAGE("CMAKE_CXX_FLAGS_DEBUG = ${CMAKE_CXX_FLAGS_DEBUG}") 
MESSAGE("CMAKE_CXX_FLAGS_RELEASE = ${CMAKE_CXX_FLAGS_RELEASE}") 
MESSAGE("BUILD_SHARED_LIBS = ${BUILD_SHARED_LIBS}")
MESSAGE("CMAKE_CXX_COMPILER_ID = ${CMAKE_CXX_COMPILER_ID}") 
